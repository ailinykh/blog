<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ailinykh.com/</id>
    <title>ailinykh.com Blog</title>
    <updated>2025-09-07T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ailinykh.com/"/>
    <subtitle>ailinykh.com Blog</subtitle>
    <icon>https://ailinykh.com/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Ngrok selfhosted alternative]]></title>
        <id>https://ailinykh.com/free-selfhosted-ngrok-alternative</id>
        <link href="https://ailinykh.com/free-selfhosted-ngrok-alternative"/>
        <updated>2025-09-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Ngrok is a popular tool for web developers that lets you create secure tunnels from the public internet to local servers running on a developer's machine. However, it may not be available with certain providers.]]></summary>
        <content type="html"><![CDATA[<p>Ngrok is a popular tool for web developers that lets you create secure tunnels from the public internet to local servers running on a developer's machine. However, it may not be available with certain providers.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">$ ngrok http 3000</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ERROR:  authentication failed: We do not allow agents to connect to ngrok from your IP address (188.146.58.201).</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ERROR:</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ERROR:  ERR_NGROK_9040</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ERROR:  https://ngrok.com/docs/errors/err_ngrok_9040</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ERROR:</span><br></span></code></pre></div></div>
<p>Luckily, there is an open-source alternative called <a href="https://github.com/antoniomika/sish" target="_blank" rel="noopener noreferrer">sish</a>. It can be deployed on your personal web server, and here is a step-by-step tutorial on how to do it.</p>
<p>Let’s start with the minimal infrastructure you’ll need.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="infrastructure-configuration">Infrastructure configuration<a href="https://ailinykh.com/free-selfhosted-ngrok-alternative#infrastructure-configuration" class="hash-link" aria-label="Direct link to Infrastructure configuration" title="Direct link to Infrastructure configuration">​</a></h2>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-i-configure-the-remote-server">Step I. Configure the remote server<a href="https://ailinykh.com/free-selfhosted-ngrok-alternative#step-i-configure-the-remote-server" class="hash-link" aria-label="Direct link to Step I. Configure the remote server" title="Direct link to Step I. Configure the remote server">​</a></h3>
<p>The easiest way to deploy sish is with <a href="https://docs.docker.com/compose/" target="_blank" rel="noopener noreferrer">docker compose</a>.</p>
<p>Create <code>compose.yml</code> file:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_OeMC">/opt/sish/compose.yml</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token key atrule">sish</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> antoniomika/sish</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">container_name</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> sish</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">volumes</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain"> ./keys</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain">/keys</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain"> 2222</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token number" style="color:rgb(247, 140, 108)">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">|</span><span class="token scalar string" style="color:rgb(195, 232, 141)"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --ssh-address=:22</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --http-address=:80</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --bind-random-ports=false</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --bind-random-subdomains=false</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --domain=example.com</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --authentication-keys-directory=/keys</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --private-keys-directory=/keys</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">restart</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> unless</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">stopped</span><br></span></code></pre></div></div>
<p>Replace <code>--domain=example.com</code> with a domain you own.</p>
<p>Create <code>keys</code> directory:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">mkdir -p /opt/sish/keys</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-ii-add-your-public-key">Step II. Add your public key<a href="https://ailinykh.com/free-selfhosted-ngrok-alternative#step-ii-add-your-public-key" class="hash-link" aria-label="Direct link to Step II. Add your public key" title="Direct link to Step II. Add your public key">​</a></h3>
<p>Since sish uses SSH, you’ll need to copy your public key to the server:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">scp ~/.ssh/id_rsa.pub example.com:/opt/sish/keys/</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Instead of RSA, use a <strong>Ed25519</strong> - it's faster and considered <a href="https://security.stackexchange.com/a/90083" target="_blank" rel="noopener noreferrer">more secure</a> in most cases.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-iii-run-sish-and-open-a-tunnel">Step III. Run sish and open a tunnel<a href="https://ailinykh.com/free-selfhosted-ngrok-alternative#step-iii-run-sish-and-open-a-tunnel" class="hash-link" aria-label="Direct link to Step III. Run sish and open a tunnel" title="Direct link to Step III. Run sish and open a tunnel">​</a></h3>
<p>On the <strong>remote host</strong>, start the service:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">docker-compose -f /opt/sish/compose.yml up -d</span><br></span></code></pre></div></div>
<p>On your <strong>local machine</strong>, run your web app (say, on port 3000) and start a tunnel:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ssh -p 2222 -R dev:80:localhost:3000 example.com</span><br></span></code></pre></div></div>
<p>If it worked, you’ll see:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">Press Ctrl-C to close the session.</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Starting SSH Forwarding service for http:80. Forwarded connections can be accessed via the following methods:</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">HTTP: http://dev.example.com</span><br></span></code></pre></div></div>
<p>Now open <code>dev.example.com</code> in your browser - and you're all set!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bonus-websocket-support">Bonus: WebSocket support<a href="https://ailinykh.com/free-selfhosted-ngrok-alternative#bonus-websocket-support" class="hash-link" aria-label="Direct link to Bonus: WebSocket support" title="Direct link to Bonus: WebSocket support">​</a></h3>
<p>To keep WebSocket connections from reconnecting every few seconds, add this line:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_OeMC">/opt/sish/compose.yml</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token key atrule">sish</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> antoniomika/sish</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">container_name</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> sish</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">volumes</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain"> ./keys</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain">/keys</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain"> 2222</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token number" style="color:rgb(247, 140, 108)">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">|</span><span class="token scalar string" style="color:rgb(195, 232, 141)"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --ssh-address=:22</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --http-address=:80</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --bind-random-ports=false</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --bind-random-subdomains=false</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --domain=example.com</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --authentication-keys-directory=/keys</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --private-keys-directory=/keys</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#bfc7d5"><span class="token scalar string" style="color:rgb(195, 232, 141)">      --idle-connection=false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">restart</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> unless</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">stopped</span><br></span></code></pre></div></div>
<p>👉 That’s it — you’ve got your own self-hosted ngrok alternative running!</p>]]></content>
        <author>
            <name>Anton Ilinykh</name>
        </author>
        <category label="ngrok" term="ngrok"/>
        <category label="selfhosted" term="selfhosted"/>
        <category label="sish" term="sish"/>
        <category label="docker-compose" term="docker-compose"/>
        <category label="tunnel" term="tunnel"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mikrotik vs Roskomnadzor]]></title>
        <id>https://ailinykh.com/mikrotik-ipsec-l2tp-bgp-routing</id>
        <link href="https://ailinykh.com/mikrotik-ipsec-l2tp-bgp-routing"/>
        <updated>2025-02-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[For research purposes, you may need to access certain resources from Roskomnadzor’s blacklist, which may be restricted in your country.]]></summary>
        <content type="html"><![CDATA[<p>For research purposes, you may need to access certain resources from <a href="https://en.wikipedia.org/wiki/Internet_censorship_in_Russia#Internet_blacklist" target="_blank" rel="noopener noreferrer">Roskomnadzor’s blacklist</a>, which may be restricted in your country.</p>
<p>There are five small steps to bypass the blacklist using a MikroTik router and an IPsec/L2TP connection on a simple VPS running a Docker container.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-i-run-ipsec-server">Step I. Run IPSeC server<a href="https://ailinykh.com/mikrotik-ipsec-l2tp-bgp-routing#step-i-run-ipsec-server" class="hash-link" aria-label="Direct link to Step I. Run IPSeC server" title="Direct link to Step I. Run IPSeC server">​</a></h3>
<p>There are many ways to do this, but I prefer running a simple Docker container on your VPS. On your server, create a <code>compose.yml</code> file with the following content, replacing <code>YOUR_SHARED_SECRET</code> with a securely generated random password.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token key atrule">ipsec</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> hwdsl2/ipsec</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">vpn</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">server</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">restart</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> always</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">environment</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token key atrule">VPN_IPSEC_PSK</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> YOUR_SHARED_SECRET</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token key atrule">VPN_USER</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> mikrotik</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token key atrule">VPN_PASSWORD</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> mikrotik</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"500:500/udp"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"4500:4500/udp"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">privileged</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token boolean important" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">hostname</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> ipsec</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">vpn</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">server</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token key atrule">container_name</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> ipsec</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">vpn</span><span class="token punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token plain">server</span><br></span></code></pre></div></div>
<p>Save the file, then run <code>docker compose up -d</code> container and wait for the container to start.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-ii-l2tp-client-setup">Step II. L2TP client setup<a href="https://ailinykh.com/mikrotik-ipsec-l2tp-bgp-routing#step-ii-l2tp-client-setup" class="hash-link" aria-label="Direct link to Step II. L2TP client setup" title="Direct link to Step II. L2TP client setup">​</a></h3>
<p>Next, retrieve your VPS hostname or IP address and create a new L2TP client on your MikroTik router using the following terminal command</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; interface l2tp-client add disabled=no name=l2tp-out connect-to=&lt;YOUR_HOST_IP&gt; user=mikrotik password=mikrotik use-ipsec=yes ipsec-secret=&lt;YOUR_SHARED_SECRET&gt;</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; interface l2tp-client add name=l2tp-out connect-to=&lt;YOUR_HOST_IP&gt; user=mikrotik password=mikrotik use-ipsec=yes ipsec-secret=&lt;YOUR_SHARED_SECRET&gt;</span><br></span></code></pre></div></div>
<p>Check it's working</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; ping github.com interface=l2tp-out</span><br></span></code></pre></div></div>
<p>If you receive an ICMP response, it means everything is working perfectly</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-iii-bgp-configuration">Step III. BGP configuration<a href="https://ailinykh.com/mikrotik-ipsec-l2tp-bgp-routing#step-iii-bgp-configuration" class="hash-link" aria-label="Direct link to Step III. BGP configuration" title="Direct link to Step III. BGP configuration">​</a></h3>
<p>There are several services, such as <a href="https://antifilter.download/" target="_blank" rel="noopener noreferrer">antifilter.download</a> and <a href="https://antifilter.network/" target="_blank" rel="noopener noreferrer">antifilter.network</a>, that provide blacklisted routes from RKN.</p>
<p>These services can automatically configure your router via BGP, eliminating the need to update lists manually every day.</p>
<p>To set up BGP, visit <a href="https://antifilter.network/bgp" target="_blank" rel="noopener noreferrer">antifilter.network bgp page</a> and obtain your <code>ASN</code>, <code>Router ID</code> (your IP address), and <code>Service IP</code></p>
<p>Create template</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; /routing/bgp template add as=64999 disabled=no hold-time=4m input.filter=bgp_in .ignore-ad-path-len=yes keepalive-time=1m multihop=yes name=antifilter routing-table=main</span><br></span></code></pre></div></div>
<p>...and connection</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; /routing/bgp connection add disabled=no hold-time=4m input.filter=bgp_in .ignore-ad-path-len=yes keepalive=time=1m local.role=ebgp multihop=yes name=antifilter_bgp remote.address=51.75.66.20/32 .as=65444 router-id=&lt;YOUR_IP_ADDRESS&gt; routing-table=main templates=antifilter</span><br></span></code></pre></div></div>
<p>Wait <strong>around 5 minutes</strong> and see if everything works</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; /routing/bgp/session print  </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Flags: E - established </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"> 0 E name="antifilter_bgp-1" </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">     remote.address=45.148.244.55 .as=65444 .id=10.75.66.2 .capabilities=mp,rr,gr,as4,err,llgr .afi=ip,ipv6 .hold-time=4m </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">     .messages=11991 .bytes=1011967 .gr-time=120 .eor=ip </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">     local.address=192.168.88.1 .as=64999 .id=&lt;YOUR_IP_ADDRESS&gt; .cluster-id=&lt;YOUR_IP_ADDRESS&gt; .capabilities=mp,rr,gr,as4 .afi=ip </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">     .messages=4 .bytes=76 .eor="" </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">     output.procid=20 </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">     input.procid=20 .filter=bgp_in .ignore-as-path-len=yes ebgp </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">     multihop=yes hold-time=4m keepalive-time=1m uptime=3m1s320ms last-started=2025-02-15 12:22:37 prefix-count=19725 </span><br></span></code></pre></div></div>
<p>At the end of the output, you'll see the number of prefixes: <code>prefix-count=19725</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-iv-firewall-configuration">Step IV. Firewall configuration<a href="https://ailinykh.com/mikrotik-ipsec-l2tp-bgp-routing#step-iv-firewall-configuration" class="hash-link" aria-label="Direct link to Step IV. Firewall configuration" title="Direct link to Step IV. Firewall configuration">​</a></h2>
<p>To route traffic through the correct gateway, add the following rule to Mikrotik's firewall</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; /routing/filter/rule add chain=bgp_in disabled=no rule="set gw l2tp-out; accept;"</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-v-dns-configuratoin-optional">Step V. DNS configuratoin (optional)<a href="https://ailinykh.com/mikrotik-ipsec-l2tp-bgp-routing#step-v-dns-configuratoin-optional" class="hash-link" aria-label="Direct link to Step V. DNS configuratoin (optional)" title="Direct link to Step V. DNS configuratoin (optional)">​</a></h2>
<p>To avoid seeing unwanted ads, you can also use a DNS blocking service like <a href="https://adguard-dns.io/en/blog/adguard-dns-new-addresses.html" target="_blank" rel="noopener noreferrer">AdGuard DNS</a>:</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">[admin@MikroTik] &gt; /ip/dns set servers=94.140.14.14,94.140.15.15</span><br></span></code></pre></div></div>
<p>Enjoy!</p>]]></content>
        <author>
            <name>Anton Ilinykh</name>
        </author>
        <category label="mikrotik" term="mikrotik"/>
        <category label="ipsec" term="ipsec"/>
        <category label="l2tp" term="l2tp"/>
        <category label="bgp" term="bgp"/>
        <category label="dns" term="dns"/>
        <category label="роскомнадзор" term="роскомнадзор"/>
        <category label="обход блокировок" term="обход блокировок"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[FFMPEG cheatsheet]]></title>
        <id>https://ailinykh.com/ffmpeg-cheatsheet</id>
        <link href="https://ailinykh.com/ffmpeg-cheatsheet"/>
        <updated>2023-05-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Here you can find some usefull tips of using ffmpeg library]]></summary>
        <content type="html"><![CDATA[<p>Here you can find some usefull tips of using ffmpeg library</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>a sample video file to play with</div><div class="admonitionContent_BuS1"><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">curl -o input.mp4 https://www.w3schools.com/html/mov_bbb.mp4</span><br></span></code></pre></div></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="show-detailed-information-about-video-file">Show detailed information about video file<a href="https://ailinykh.com/ffmpeg-cheatsheet#show-detailed-information-about-video-file" class="hash-link" aria-label="Direct link to Show detailed information about video file" title="Direct link to Show detailed information about video file">​</a></h3>
<p>the <code>ffprobe</code> works with <em>images</em> as well</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffprobe -v error -of json -show_streams -show_format input.mp4</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="resize-to-desired-widthheight">Resize to desired width/height<a href="https://ailinykh.com/ffmpeg-cheatsheet#resize-to-desired-widthheight" class="hash-link" aria-label="Direct link to Resize to desired width/height" title="Direct link to Resize to desired width/height">​</a></h3>
<ul>
<li>explicit size: <code>scale=640:480</code></li>
<li>resize only by width: <code>scale=640:-1</code></li>
<li>resize only by height: <code>scale=-1:480</code></li>
<li>to make a thumbnail just specify <code>output.jpg</code> as output file</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -v error -y -i input.mp4 -ss 00:00:01.000 -vframes 1 \</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    -filter:v scale=320:-1 output.mp4</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="split-video-by-size">Split video by size<a href="https://ailinykh.com/ffmpeg-cheatsheet#split-video-by-size" class="hash-link" aria-label="Direct link to Split video by size" title="Direct link to Split video by size">​</a></h3>
<ul>
<li>split video by 50MB</li>
<li>specify offset as <code>-ss 00:10:00</code></li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -v error -y -i input.mp4 -fs 50000000 output.mp4</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="use--map_metadata-to-keep-id3-tags">Use -map_metadata to keep <code>id3</code> tags<a href="https://ailinykh.com/ffmpeg-cheatsheet#use--map_metadata-to-keep-id3-tags" class="hash-link" aria-label="Direct link to use--map_metadata-to-keep-id3-tags" title="Direct link to use--map_metadata-to-keep-id3-tags">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -i input.mp4 -map 1 -c copy output.mp4</span><br></span></code></pre></div></div>
<ul>
<li>copy global metadata</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -i input.mp4 -map_metadata 0 -c copy output.mp4</span><br></span></code></pre></div></div>
<ul>
<li>copy video stream metadata only</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -i input.mp4 -map_metadata:s:v 0:s:v -c copy output.mp4</span><br></span></code></pre></div></div>
<ul>
<li>copy audio stream metadata only</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -i input.mp4 -map_metadata:s:a 0:s:a -c copy output.mp4</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="convert-to-1080p">Convert to 1080p<a href="https://ailinykh.com/ffmpeg-cheatsheet#convert-to-1080p" class="hash-link" aria-label="Direct link to Convert to 1080p" title="Direct link to Convert to 1080p">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -v error -stats -i input.mp4 -map_metadata 0:g -s hd1080 \</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    -c:v libx264 -crf 23 -c:a aac -strict -2 output.mp4</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="convert-video-to-gif">Convert video to .gif<a href="https://ailinykh.com/ffmpeg-cheatsheet#convert-video-to-gif" class="hash-link" aria-label="Direct link to Convert video to .gif" title="Direct link to Convert video to .gif">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -v error -stats -i input.mp4 -y \</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    -vf fps=10,scale=640:-1:flags=lanczos,palettegen palette.png</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -v error -stats -i input.mp4 -i palette.png -filter_complex \</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "fps=10,scale=640:-1:flags=lanczos[x];[x][1:v]paletteuse" output.gif</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">rm palette.png</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rotate-video">Rotate video<a href="https://ailinykh.com/ffmpeg-cheatsheet#rotate-video" class="hash-link" aria-label="Direct link to Rotate video" title="Direct link to Rotate video">​</a></h3>
<ul>
<li>0 = 90CounterCLockwise and Vertical Flip (default)</li>
<li>1 = 90Clockwise</li>
<li>2 = 90CounterClockwise</li>
<li>3 = 90Clockwise and Vertical Flip</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ffmpeg -i input.mp4 -vf "transpose=1" output.mp4</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>Anton Ilinykh</name>
        </author>
        <category label="ffmpeg" term="ffmpeg"/>
        <category label="cheatsheet" term="cheatsheet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Homebrew package version downgrade]]></title>
        <id>https://ailinykh.com/homebrew-formula-downgrade</id>
        <link href="https://ailinykh.com/homebrew-formula-downgrade"/>
        <updated>2021-10-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Nowadays rollback to any particular version of the Homebrew package might be tricky since the commands brew versions  and brew switch   are deprecated and no more available.]]></summary>
        <content type="html"><![CDATA[<p>Nowadays rollback to any particular version of the Homebrew package might be tricky since the commands <code>brew versions &lt;package&gt;</code> and <code>brew switch &lt;package&gt; &lt;version&gt;</code> are deprecated and no more available.</p>
<p>First, you should check if any other versions are available for your package:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew search python</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">==&gt; Formulae</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">app-engine-python          python-launcher            python@3.8</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">boost-python               python-markdown            python@3.9 ✔</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">boost-python3              python-tabulate            reorder-python-imports</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">bpython                    python-tk@3.10             wxpython</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">gst-python                 python-tk@3.9              pythran</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ipython                    python-yq                  jython</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">micropython                python@3.10                cython</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ptpython                   python@3.7</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">==&gt; Casks</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">awips-python                             mysql-connector-python</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">If you meant "python" specifically:</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">It was migrated from homebrew/cask to homebrew/core.</span><br></span></code></pre></div></div>
<p>if so, the necessary version could be installed right from the repo:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew install python@3.10</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew link python@3.10</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % python3 --version                                                               </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Python 3.10.0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % </span><br></span></code></pre></div></div>
<p>if not, there are two more ways to achieve that.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="install-using-remote-tap">Install using remote tap<a href="https://ailinykh.com/homebrew-formula-downgrade#install-using-remote-tap" class="hash-link" aria-label="Direct link to Install using remote tap" title="Direct link to Install using remote tap">​</a></h2>
<p>You should find the correct Formula file at github.com</p>
<p>Let's say you are trying to downgrade the <code>git-lfs</code> package. In this case, you should follow these steps:</p>
<ol>
<li>Go to <a href="https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/git-lfs.rb" target="_blank" rel="noopener noreferrer">https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/git-lfs.rb</a></li>
<li>In the top right corner find the <strong>History</strong> button</li>
<li>Find commit with the version you need</li>
<li>Choose <strong>View file</strong> from the menu</li>
<li>Click <strong>Raw</strong> button</li>
<li>That is it! You've got the Url: <a href="https://raw.githubusercontent.com/Homebrew/homebrew-core/43842898fd3ff43273466052722f5ba2789196cb/Formula/git-lfs.rb" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/Homebrew/homebrew-core/43842898fd3ff43273466052722f5ba2789196cb/Formula/git-lfs.rb</a></li>
</ol>
<p>or just by using <code>git log git-lfs</code> command:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew log git-lfs</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">commit be2109eae9e1043ddb78e593a8a05d568917ca95</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Author: BrewTestBot &lt;1589480+BrewTestBot@users.noreply.github.com&gt;</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Date:   Wed Sep 29 02:14:15 2021 +0000</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    git-lfs: update 3.0.1 bottle.</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">commit 1c4607366f2c5d85c2efa803556f51a6709987f0</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Author: Rui Chen &lt;rui@chenrui.dev&gt;</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Date:   Tue Sep 28 18:48:26 2021 -0400</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    git-lfs 3.0.1</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    Closes #86082.</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    Signed-off-by: Thierry Moisan &lt;thierry.moisan@gmail.com&gt;</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    Signed-off-by: BrewTestBot &lt;1589480+BrewTestBot@users.noreply.github.com&gt;</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#bfc7d5"><span class="token plain">commit 43842898fd3ff43273466052722f5ba2789196cb</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Author: Michael Cho &lt;20700669+cho-m@users.noreply.github.com&gt;</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Date:   Wed Jul 7 01:55:56 2021 +0000</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    git-lfs: update 2.13.3 bottle.</span><br></span></code></pre></div></div>
<p>here is the 2.13.3 version commit hash <code>43842898fd3ff43273466052722f5ba2789196cb</code> and it can be put info <strong>raw</strong> GitHub url:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">https://raw.githubusercontent.com/Homebrew/homebrew-core/&lt;COMMIT ID&gt;/Formula/git-lfs.rb</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>In different guides across the internet you may see the following command:</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew install &lt;url&gt;</span><br></span></code></pre></div></div><p>It's also <a href="https://brew.sh/2020/05/29/homebrew-2.3.0/#:~:text=brew%20install%20from%20a%20URL,beginning%20installation%20or%20locking%20dependencies." target="_blank" rel="noopener noreferrer"><strong>deprecated</strong></a> and <strong>not working</strong> anymore</p></div></div>
<p>Now all you need is to put this file into your own "tap" (repository) on a GitHub and install it using homebrew:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew unlink git-lfs</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew install &lt;user&gt;/&lt;repo&gt;/git-lfs</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="install-using-local-tap-and-brew-extract">Install using local tap and brew extract<a href="https://ailinykh.com/homebrew-formula-downgrade#install-using-local-tap-and-brew-extract" class="hash-link" aria-label="Direct link to Install using local tap and brew extract" title="Direct link to Install using local tap and brew extract">​</a></h2>
<p>Another way is to create a local tap and then <code>extract</code> the needed version into it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew tap-new $USER/local-git-lfs</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">Initialized empty Git repository in /usr/local/Homebrew/Library/Taps/admin/homebrew-local-git-lfs/.git/</span><br></span></code></pre></div></div>
<p>this one creates a new local tap inside your local Homebrew repo.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>Use <code>brew --repository</code> command to find Homebrew's root location</p></div></div>
<p>After that you can <code>extract</code> the correct version into this new tap</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew extract --version 2.13.3 git-lfs $USER/local-git-lfs</span><br></span></code></pre></div></div>
<p>and the last step is to install this version as usual:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew unlink git-lfs # in case of another version installed</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">admin@macos ~ % brew install git-lfs@2.13.3</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>Anton Ilinykh</name>
        </author>
        <category label="homebrew" term="homebrew"/>
        <category label="package" term="package"/>
        <category label="formula" term="formula"/>
        <category label="rollback" term="rollback"/>
        <category label="guide" term="guide"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Testing netwok requests with URLProtocol stubs]]></title>
        <id>https://ailinykh.com/network-testing-with-url-protocol-stubbing</id>
        <link href="https://ailinykh.com/network-testing-with-url-protocol-stubbing"/>
        <updated>2021-02-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Apple has a powerful URL Loading System which can be used in various ways with a bunch of most common URL schemes. It also includes the URLProtocol, a class that can intercept all network requests for different purposes. You can use it for analytics, testing, and even profiling your application.]]></summary>
        <content type="html"><![CDATA[<p>Apple has a powerful <a href="https://developer.apple.com/documentation/foundation/url_loading_system" target="_blank" rel="noopener noreferrer">URL Loading System</a> which can be used in various ways with a bunch of most common URL schemes. It also includes the <a href="https://developer.apple.com/documentation/foundation/urlprotocol" target="_blank" rel="noopener noreferrer">URLProtocol</a>, a class that can intercept all network requests for different purposes. You can use it for analytics, testing, and even profiling your application.</p>
<p>All you need to do is to subclass the <code>URLProtocol</code> and override nessesary methods.</p>
<div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocolStub</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocol</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">canInit</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">with request</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLRequest</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">Bool</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">guard</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> url </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> host </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">host </span><span class="token keyword" style="font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">false</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> host</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">hasSuffix</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string-literal string" style="color:rgb(195, 232, 141)">"example.com"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">canonicalRequest</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">for</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLRequest</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLRequest</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> request</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre></div></div>
<p>After that you have to register it <strong>before</strong> any network request were made and also unregister if needed:</p>
<div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">setUp</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">super</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">setUp</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocol</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">registerClass</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocolStub</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token keyword" style="font-style:italic">self</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">tearDown</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">super</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">tearDown</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocol</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">unregisterClass</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocolStub</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token keyword" style="font-style:italic">self</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre></div></div>
<p>And from now you can decide how to handle every single network request made within your application.</p>
<p>For example you can stub a response before any paticular request will be executed and response immediately.</p>
<div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocolStub</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocol</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">enum</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLResponseStub</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">case</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">failure</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token class-name" style="color:rgb(255, 203, 107)">Error</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">case</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">success</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token class-name" style="color:rgb(255, 203, 107)">Data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">static</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> stubs </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token constant" style="color:rgb(130, 170, 255)">URL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLResponseStub</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">startLoading</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">guard</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> url </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> request</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> stub </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocolStub</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">stubs</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">switch</span><span class="token plain"> stub </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">case</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">failure</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            client</span><span class="token operator" style="color:rgb(137, 221, 255)">?</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">urlProtocol</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">self</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> didFailWithError</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">case</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">success</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            client</span><span class="token operator" style="color:rgb(137, 221, 255)">?</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">urlProtocol</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">self</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> didLoad</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">stopLoading</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_BuS1"><p>You have to implement <code>stopLoading</code> method even if you don't need it</p></div></div>
<p>This approach gives you ability to mock any response you want just writing a fiew lines of code.</p>
<div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> url </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">URL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">string</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token string-literal string" style="color:rgb(195, 232, 141)">"https://example.com"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token operator" style="color:rgb(137, 221, 255)">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> error </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">NSError</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">domain</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token string-literal string" style="color:rgb(195, 232, 141)">""</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> code</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token class-name" style="color:rgb(255, 203, 107)">URLProtocolStub</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">stubs</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">failure</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">error</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><br></span></code></pre></div></div>
<p>Just make sure that the whole mock stuff happens before the actual network requests.</p>]]></content>
        <author>
            <name>Anton Ilinykh</name>
        </author>
        <category label="swift" term="swift"/>
        <category label="URLProtocol" term="URLProtocol"/>
        <category label="testing" term="testing"/>
        <category label="networking" term="networking"/>
        <category label="ios" term="ios"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dependency Inversion Principle]]></title>
        <id>https://ailinykh.com/dependency-inversion-principle</id>
        <link href="https://ailinykh.com/dependency-inversion-principle"/>
        <updated>2021-02-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The Dependency Inversion Principle is the last one from SOLID stands for decoupling the system into independent modules. It means that one part of a system should not depend on another one directly.]]></summary>
        <content type="html"><![CDATA[<p>The Dependency Inversion Principle is the last one from <a href="https://en.wikipedia.org/wiki/SOLID" target="_blank" rel="noopener noreferrer">SOLID</a> stands for decoupling the system into independent modules. It means that one part of a system should not depend on another one directly.</p>
<p>Let's see an example.</p>
<p>On the one hand, we have a <code>ViewController</code> which is the part of <em>UI/Presentation Module</em>, and on the other hand, we have some data source which can be a part of <em>Networking/Persistence Module</em>. Let's say it is an <code>URLSession</code> object.</p>
<div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">ViewController</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">UIViewController</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">viewDidLoad</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">super</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">viewDidLoad</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLSession</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">shared</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">dataTask</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">with</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> error </span><span class="token keyword" style="font-style:italic">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// Do something with response</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">resume</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre></div></div>
<br>
<p>This code can be represented by a diagram</p>
<div style="text-align:center"></div>
<p>The <code>UIViewController</code> depends on <code>URLSession</code> concrete implementation. And it means that <code>URLSession</code> <strong>can't</strong> be replaced with another <em>Network</em> client such as <a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="noopener noreferrer">Alamofire</a> without changing the <em>Presentation Module</em>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="solution">Solution<a href="https://ailinykh.com/dependency-inversion-principle#solution" class="hash-link" aria-label="Direct link to Solution" title="Direct link to Solution">​</a></h2>
<p>This problem can be solved with Dependency Inversion just by adding another abstraction between concrete implementations. Some <code>protocol</code> that can live in <em>Presentation Module</em> and the <em>Network Module</em> can conform to it.</p>
<div style="text-align:center"></div>
<p>and the code above will transform to</p>
<div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">protocol</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">HTTPClient</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">load</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token constant" style="color:rgb(130, 170, 255)">URL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> completion</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token attribute atrule">@escaping</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token class-name" style="color:rgb(255, 203, 107)">Data</span><span class="token operator" style="color:rgb(137, 221, 255)">?</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URLResponse</span><span class="token operator" style="color:rgb(137, 221, 255)">?</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">Error</span><span class="token operator" style="color:rgb(137, 221, 255)">?</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">Void</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">ViewController</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">UIViewController</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> client</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">HTTPClient</span><span class="token operator" style="color:rgb(137, 221, 255)">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">override</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(130, 170, 255)">viewDidLoad</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">super</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">viewDidLoad</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        client</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">load</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> error</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// Do something</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre></div></div>
<p>Now you can have two separate implementations of <code>HTTPClient</code> protocol, and they both can live in <em>Network Module</em></p>
<div style="text-align:center"></div>
<p>That's the way you invert the dependencies from one module to another, and now you can easily switch between two concrete implementations of <code>HTTPClient</code> from <em>Networking Module</em>.</p>]]></content>
        <author>
            <name>Anton Ilinykh</name>
        </author>
        <category label="swift" term="swift"/>
        <category label="SOLID" term="SOLID"/>
        <category label="dependency inversion" term="dependency inversion"/>
        <category label="architecture" term="architecture"/>
        <category label="ios" term="ios"/>
    </entry>
</feed>