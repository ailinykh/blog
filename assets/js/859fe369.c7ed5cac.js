"use strict";(self.webpackChunkailinykh_com=self.webpackChunkailinykh_com||[]).push([[5032],{3181:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var t=s(4124),r=s(4848),o=s(8453);const i={slug:"free-selfhosted-ngrok-alternative",title:"Ngrok selfhosted alternative",authors:["anton"],tags:["ngrok","selfhosted","sish","docker-compose","tunnel"]},a=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Infrastructure configuration",id:"infrastructure-configuration",level:2},{value:"Step I. Configure the remote server",id:"step-i-configure-the-remote-server",level:3},{value:"Step II. Add your public key",id:"step-ii-add-your-public-key",level:3},{value:"Step III. Run sish and open a tunnel",id:"step-iii-run-sish-and-open-a-tunnel",level:3},{value:"Bonus: WebSocket support",id:"bonus-websocket-support",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Ngrok is a popular tool for web developers that lets you create secure tunnels from the public internet to local servers running on a developer's machine. However, it may not be available with certain providers."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ ngrok http 3000\nERROR:  authentication failed: We do not allow agents to connect to ngrok from your IP address (188.146.58.201).\nERROR:\nERROR:  ERR_NGROK_9040\nERROR:  https://ngrok.com/docs/errors/err_ngrok_9040\nERROR:\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Luckily, there is an open-source alternative called ",(0,r.jsx)(n.a,{href:"https://github.com/antoniomika/sish",children:"sish"}),". It can be deployed on your personal web server, and here is a step-by-step tutorial on how to do it."]}),"\n",(0,r.jsx)(n.p,{children:"Let\u2019s start with the minimal infrastructure you\u2019ll need."}),"\n",(0,r.jsx)(n.h2,{id:"infrastructure-configuration",children:"Infrastructure configuration"}),"\n",(0,r.jsx)(n.mermaid,{value:"architecture-beta\n    group cloud(cloud)[Cloud provider]\n    \n    service server(server)[Server] in cloud\n    service laptop(user)[Laptop]\n    service inet(internet)[User from external network]\n    \n    laptop:R <--\x3e L:server\n    inet:L --\x3e R:server"}),"\n",(0,r.jsx)(n.h3,{id:"step-i-configure-the-remote-server",children:"Step I. Configure the remote server"}),"\n",(0,r.jsxs)(n.p,{children:["The easiest way to deploy sish is with ",(0,r.jsx)(n.a,{href:"https://docs.docker.com/compose/",children:"docker compose"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"compose.yml"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="/opt/sish/compose.yml"',children:"services:\n  sish:\n    image: antoniomika/sish:latest\n    container_name: sish\n    volumes:\n      - ./keys:/keys\n    ports:\n      - 2222:22\n    command: |\n      --ssh-address=:22\n      --http-address=:80\n      --bind-random-ports=false\n      --bind-random-subdomains=false\n      --domain=example.com\n      --authentication-keys-directory=/keys\n      --private-keys-directory=/keys\n    restart: unless-stopped\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"--domain=example.com"})," with a domain you own."]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"keys"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p /opt/sish/keys\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-ii-add-your-public-key",children:"Step II. Add your public key"}),"\n",(0,r.jsx)(n.p,{children:"Since sish uses SSH, you\u2019ll need to copy your public key to the server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"scp ~/.ssh/id_rsa.pub example.com:/opt/sish/keys/\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Instead of RSA, use a ",(0,r.jsx)(n.strong,{children:"Ed25519"})," - it's faster and considered ",(0,r.jsx)(n.a,{href:"https://security.stackexchange.com/a/90083",children:"more secure"})," in most cases."]})}),"\n",(0,r.jsx)(n.h3,{id:"step-iii-run-sish-and-open-a-tunnel",children:"Step III. Run sish and open a tunnel"}),"\n",(0,r.jsxs)(n.p,{children:["On the ",(0,r.jsx)(n.strong,{children:"remote host"}),", start the service:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose -f /opt/sish/compose.yml up -d\n"})}),"\n",(0,r.jsxs)(n.p,{children:["On your ",(0,r.jsx)(n.strong,{children:"local machine"}),", run your web app (say, on port 3000) and start a tunnel:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ssh -p 2222 -R dev:80:localhost:3000 example.com\n"})}),"\n",(0,r.jsx)(n.p,{children:"If it worked, you\u2019ll see:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Press Ctrl-C to close the session.\n\nStarting SSH Forwarding service for http:80. Forwarded connections can be accessed via the following methods:\nHTTP: http://dev.example.com\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now open ",(0,r.jsx)(n.code,{children:"dev.example.com"})," in your browser - and you're all set!"]}),"\n",(0,r.jsx)(n.h3,{id:"bonus-websocket-support",children:"Bonus: WebSocket support"}),"\n",(0,r.jsx)(n.p,{children:"To keep WebSocket connections from reconnecting every few seconds, add this line:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="/opt/sish/compose.yml"',children:"services:\n  sish:\n    image: antoniomika/sish:latest\n    container_name: sish\n    volumes:\n      - ./keys:/keys\n    ports:\n      - 2222:22\n    command: |\n      --ssh-address=:22\n      --http-address=:80\n      --bind-random-ports=false\n      --bind-random-subdomains=false\n      --domain=example.com\n      --authentication-keys-directory=/keys\n      --private-keys-directory=/keys\n      // highlight-next-line\n      --idle-connection=false\n    restart: unless-stopped\n"})}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udc49 That\u2019s it \u2014 you\u2019ve got your own self-hosted ngrok alternative running!"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4124:e=>{e.exports=JSON.parse('{"permalink":"/free-selfhosted-ngrok-alternative","editUrl":"https://github.com/ailinykh/blog/edit/master/blog/2025-09-07-sish-selfhosted.md","source":"@site/blog/2025-09-07-sish-selfhosted.md","title":"Ngrok selfhosted alternative","description":"Ngrok is a popular tool for web developers that lets you create secure tunnels from the public internet to local servers running on a developer\'s machine. However, it may not be available with certain providers.","date":"2025-09-07T00:00:00.000Z","tags":[{"inline":true,"label":"ngrok","permalink":"/tags/ngrok"},{"inline":true,"label":"selfhosted","permalink":"/tags/selfhosted"},{"inline":true,"label":"sish","permalink":"/tags/sish"},{"inline":true,"label":"docker-compose","permalink":"/tags/docker-compose"},{"inline":true,"label":"tunnel","permalink":"/tags/tunnel"}],"readingTime":2.22,"hasTruncateMarker":true,"authors":[{"name":"Anton Ilinykh","title":"Software Engineer","imageURL":"https://avatars.githubusercontent.com/u/939390?s=400&v=4","key":"anton","page":null}],"frontMatter":{"slug":"free-selfhosted-ngrok-alternative","title":"Ngrok selfhosted alternative","authors":["anton"],"tags":["ngrok","selfhosted","sish","docker-compose","tunnel"]},"unlisted":false,"nextItem":{"title":"Mikrotik vs Roskomnadzor","permalink":"/mikrotik-ipsec-l2tp-bgp-routing"}}')},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);