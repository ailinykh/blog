"use strict";(self.webpackChunkailinykh_com=self.webpackChunkailinykh_com||[]).push([[953],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),f=c(n),m=o,g=f["".concat(l,".").concat(m)]||f[m]||p[m]||i;return n?r.createElement(g,a(a({ref:e},u),{},{components:n})):r.createElement(g,a({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2447:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var r=n(3117),o=(n(7294),n(3905));const i={slug:"network-testing-with-url-protocol-stubbing",title:"Testing netwok requests with URLProtocol stubs",author:"Anton Ilinykh",author_image_url:"https://avatars.githubusercontent.com/u/939390?s=400&v=4",tags:["swift","URLProtocol","testing","networking","ios"]},a=void 0,s={permalink:"/network-testing-with-url-protocol-stubbing",editUrl:"https://github.com/ailinykh/blog/edit/master/blog/2021-02-27-network-testing-with-url-protocol-stubbing.md",source:"@site/blog/2021-02-27-network-testing-with-url-protocol-stubbing.md",title:"Testing netwok requests with URLProtocol stubs",description:"Apple has a powerful URL Loading System which can be used in various ways with a bunch of most common URL schemes. It also includes the URLProtocol, a class that can intercept all network requests for different purposes. You can use it for analytics, testing, and even profiling your application.",date:"2021-02-27T00:00:00.000Z",formattedDate:"February 27, 2021",tags:[{label:"swift",permalink:"/tags/swift"},{label:"URLProtocol",permalink:"/tags/url-protocol"},{label:"testing",permalink:"/tags/testing"},{label:"networking",permalink:"/tags/networking"},{label:"ios",permalink:"/tags/ios"}],readingTime:1.5,hasTruncateMarker:!0,authors:[{name:"Anton Ilinykh",imageURL:"https://avatars.githubusercontent.com/u/939390?s=400&v=4"}],frontMatter:{slug:"network-testing-with-url-protocol-stubbing",title:"Testing netwok requests with URLProtocol stubs",author:"Anton Ilinykh",author_image_url:"https://avatars.githubusercontent.com/u/939390?s=400&v=4",tags:["swift","URLProtocol","testing","networking","ios"]},prevItem:{title:"Homebrew package version downgrade",permalink:"/homebrew-formula-downgrade"},nextItem:{title:"Dependency Inversion Principle",permalink:"/dependency-inversion-principle"}},l={authorsImageUrls:[void 0]},c=[],u={toc:c};function p(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Apple has a powerful ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/foundation/url_loading_system"},"URL Loading System")," which can be used in various ways with a bunch of most common URL schemes. It also includes the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/foundation/urlprotocol"},"URLProtocol"),", a class that can intercept all network requests for different purposes. You can use it for analytics, testing, and even profiling your application."))}p.isMDXComponent=!0}}]);